{
  "plugins": [
    "import",
    "react",
    "@typescript-eslint",
    "prettier",
    "sonarjs",
    "jsx-a11y"
  ],
  "extends": ["plugin:@typescript-eslint/recommended", "prettier"],
  "rules": {
    "react/display-name": "error",
    "react/no-unescaped-entities": "off",
    "import/no-anonymous-default-export": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-non-null-assertion": "off",
    // add new line above comment
    "no-duplicate-case": "error",
    "jsx-a11y/interactive-supports-focus": [
  "error",
  {
    "tabbable": [
      "button",
      "checkbox",
      "link",
      "searchbox",
      "spinbutton",
      "switch",
      "textbox"
    ]
  }
],
    "jsx-a11y/role-has-required-aria-props": "warn",
    "jsx-a11y/alt-text": [
      2,
      {
        "elements": ["img"],
        "img": ["Image"]
      }
    ],
    "jsx-a11y/no-static-element-interactions": [
      "error",
      {
        "handlers": [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp"
        ],
        "allowExpressionValues": true
      }
    ],
    "jsx-a11y/control-has-associated-label": [ 1, {
      "labelAttributes": ["label"],
      "controlComponents": ["CustomButton"],
      "ignoreElements": [
        "audio",
        "canvas",
        "embed",
        "input",
        "textarea",
        "tr",
        "video"
      ],
      "ignoreRoles": [
        "grid",
        "listbox",
        "menu",
        "menubar",
        "radiogroup",
        "row",
        "tablist",
        "toolbar",
        "tree",
        "treegrid"
      ],
      "depth": 3
    }],
    "lines-around-comment": [
      "error",
      {
        "beforeLineComment": true,
        "beforeBlockComment": true,
        "allowBlockStart": true,
        "allowClassStart": true,
        "allowObjectStart": true,
        "allowArrayStart": true
      }
    ],
    // add new line above return
    "newline-before-return": "error",
    // add new line below import
    "import/newline-after-import": [
      "error",
      {
        "count": 1
      }
    ],
    "@typescript-eslint/ban-types": [
      "error",
      {
        "extendDefaults": true,
        "types": {
          "{}": false
        }
      }
    ],
    "no-console": ["error", { "allow": ["warn", "error", "info"] }],
    "indent": ["error", "tab"],
    // SonarJS rules
    "sonarjs/no-identical-expressions": "error",
    "no-useless-catch": "error"
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": ["./tsconfig.json"]
      }
    }
  },
  "overrides": [
    {
      "files": ["src/iconify-bundle/*"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    }
  ]
}
